local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()

local Window = Fluent:CreateWindow({
    Title = "TSG | KynX",
    SubTitle = "by ky.19",
    TabWidth = 175,
    Size = UDim2.fromOffset(590, 390), -- Updated Size
    Acrylic = true, 
    Theme = "Rose", 
    MinimizeKey = Enum.KeyCode.LeftControl 
})

local Tabs = {
    Combat = Window:AddTab({ Title = "Combat", Icon = "swords" }),
    Misc = Window:AddTab({ Title = "Misc", Icon = "hammer" }),
    Visual = Window:AddTab({ Title = "Visual", Icon = "eye" }),
    Settings = Window:AddTab({ Title = "Settings", Icon = "settings" })
})

-- Killaura Section paragraph with content
Tabs.Combat:AddParagraph({
    Title = "Killaura Section",
    Content = "⊹˚₊‧──────────────────────‧₊˚⊹"
})

local KillauraToggle = Tabs.Combat:AddToggle("Killaura", { Title = "Killaura", Default = false }) -- Changed title to Killaura

-- Italicized Highlight and Orbit toggles
local HighlightTargetToggle = Tabs.Combat:AddToggle("HighlightTarget", { Title = "*Highlight Target*", Default = false })
local OrbitTargetToggle = Tabs.Combat:AddToggle("OrbitTarget", { Title = "*Orbit Target*", Default = false })

-- Content paragraph with long line
Tabs.Combat:AddParagraph({
    Title = "Titan Aura Section",
    Content = "⊹˚₊‧──────────────────────‧₊˚⊹"
})

-- New toggles with italics for Highlight and Orbit Titan
local TitanAuraToggle = Tabs.Combat:AddToggle("TitanAura", { Title = "Titan aura", Default = false })
local HighlightTitanToggle = Tabs.Combat:AddToggle("HighlightTitan", { Title = "*Highlight Titan*", Default = false })
local OrbitTitanToggle = Tabs.Combat:AddToggle("OrbitTitan", { Title = "*Orbit Titan*", Default = false })

-- Visual Tab - Box ESP
Tabs.Visual:AddParagraph({
    Title = "Box ESP",
    Content = "⊹˚₊‧──────────────────────‧₊˚⊹"
})

local NameESPToggle = Tabs.Visual:AddToggle("NameESP", { Title = "Name ESP", Default = false })
local TeammatesOnlyToggle = Tabs.Visual:AddToggle("TeammatesOnly", { Title = "*Teammates Only*", Default = false })
local EnemiesOnlyToggle = Tabs.Visual:AddToggle("EnemiesOnly", { Title = "*Enemies Only*", Default = false })

-- Functionality based on toggles
local function updateESP()
    if NameESPToggle.Value then
        if TeammatesOnlyToggle.Value then
            -- Logic for displaying teammates' names
        end
        if EnemiesOnlyToggle.Value then
            -- Logic for displaying enemies' names
        end
    end
end

-- Listen for changes
NameESPToggle:OnChanged(updateESP)
TeammatesOnlyToggle:OnChanged(updateESP)
EnemiesOnlyToggle:OnChanged(updateESP)

-- Function to enable Infinite Stamina
local function enableInfiniteStamina()
    local lplr = game.Players.LocalPlayer
    lplr:SetAttribute("stamina", 1)

    lplr:GetAttributeChangedSignal("stamina"):Connect(function()
        if lplr:GetAttribute("stamina") ~= 1 then
            lplr:SetAttribute("stamina", 1)
        end
    end) 
end

-- Function to disable Fall Damage
local function disableFallDamage()
    local lplr = game.Players.LocalPlayer
    if lplr and lplr.Character then
        for _, desc in ipairs(lplr.Character:GetDescendants()) do
            if desc:IsA("LocalScript") and desc.Name == "fallDamage" then
                desc.Disabled = true
                return
            end
        end
    end
end

-- Notifications
task.wait(3) -- Wait for 3 seconds
Fluent:Notify({
    Title = "Resource Loaded",
    SubContent = "System",
    Content = "Successfully Activated Infinite Stamina",
    Duration = 3
})

enableInfiniteStamina() -- Execute the infinite stamina function

task.wait(6) -- Wait for 6 more seconds (total of 9 seconds)
Fluent:Notify({
    Title = "Resource Loaded",
    SubContent = "System",
    Content = "Successfully Removed Fall Damage",
    Duration = 3
})

disableFallDamage() -- Execute the disable fall damage function

-- Print random messages every 6 seconds
local messages = {
    "Made by ahmed645 on discord",
    "https://discord.com/invite/KgChhHrn25",
    "KynX Scripts on YT",
    "Thanks for Supporting me"
}

while true do
    wait(6)
    print(messages[math.random(#messages)]) -- Print a random message from the list
end
