local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()

local Window = Fluent:CreateWindow({
    Title = "TSG | KynX",
    SubTitle = "by ky.19", -- Subtitle remains the same
    TabWidth = 165,
    Size = UDim2.fromOffset(580, 365), -- Size remains the same
    Acrylic = true, 
    Theme = "Darker", -- Changed theme to Darker
    MinimizeKey = Enum.KeyCode.LeftControl 
})

local Tabs = {
    Combat = Window:AddTab({ Title = "Combat", Icon = "swords" }),
    Autofarm = Window:AddTab({ Title = "Autofarm", Icon = "axe" }), -- Changed Autofarm icon to axe
    Misc = Window:AddTab({ Title = "Misc", Icon = "hammer" }),
    Visual = Window:AddTab({ Title = "Visual", Icon = "eye" }),
    LocalPlayer = Window:AddTab({ Title = "Local Player", Icon = "user" }), -- Local Player tab remains the same
    Settings = Window:AddTab({ Title = "Settings", Icon = "settings" })
}

-- Killaura Section paragraph with content
Tabs.Combat:AddParagraph({
    Title = "Killaura Section",
    Content = "⊹˚₊‧──────────────────────‧₊˚⊹"
})

local KillauraToggle = Tabs.Combat:AddToggle("Killaura", { Title = "Killaura", Default = false }) -- Title remains the same

-- Italicized Highlight and Orbit toggles
local HighlightTargetToggle = Tabs.Combat:AddToggle("HighlightTarget", { Title = "*Highlight Target*", Default = false })
local OrbitTargetToggle = Tabs.Combat:AddToggle("OrbitTarget", { Title = "*Orbit Target*", Default = false })

-- Content paragraph with long line
Tabs.Combat:AddParagraph({
    Title = "Titan Aura Section",
    Content = "⊹˚₊‧──────────────────────‧₊˚⊹"
})

-- New toggles with italics for Highlight and Orbit Titan
local TitanAuraToggle = Tabs.Combat:AddToggle("TitanAura", { Title = "Titan aura", Default = false })
local HighlightTitanToggle = Tabs.Combat:AddToggle("HighlightTitan", { Title = "*Highlight Titan*", Default = false })
local OrbitTitanToggle = Tabs.Combat:AddToggle("OrbitTitan", { Title = "*Orbit Titan*", Default = false })

-- Autofarm Section (Placeholder for future functionality)
Tabs.Autofarm:AddParagraph({
    Title = "Autofarm Section",
    Content = "⊹˚₊‧──────────────────────‧₊˚⊹"
})

-- Visual Tab - Removed Box ESP toggle
Tabs.Visual:AddParagraph({
    Title = "Visual Features",
    Content = "⊹˚₊‧──────────────────────‧₊˚⊹"
})

-- Local Player Tab
Tabs.LocalPlayer:AddParagraph({
    Title = "Utility Features",
    Content = "⊹˚₊‧──────────────────────‧₊˚⊹"
})

local InfiniteStaminaToggle = Tabs.LocalPlayer:AddToggle("InfiniteStamina", { Title = "Infinite Stamina", Default = false })
local NoFallDamageToggle = Tabs.LocalPlayer:AddToggle("NoFallDamage", { Title = "No Fall Damage", Default = false })
local NoClipToggle = Tabs.LocalPlayer:AddToggle("NoClip", { Title = "Noclip", Default = false })

-- Functionality based on toggles
local function updateStamina()
    local lplr = game.Players.LocalPlayer
    if InfiniteStaminaToggle.Value then
        lplr:SetAttribute("stamina", 1)
        lplr:GetAttributeChangedSignal("stamina"):Connect(function()
            if lplr:GetAttribute("stamina") ~= 1 then
                lplr:SetAttribute("stamina", 1)
            end
        end)
    else
        lplr:SetAttribute("stamina", 0) -- or whatever value you want for disabled
    end
end

local function updateFallDamage()
    local lplr = game.Players.LocalPlayer
    if NoFallDamageToggle.Value then
        if lplr and lplr.Character then
            for _, desc in ipairs(lplr.Character:GetDescendants()) do
                if desc:IsA("LocalScript") and desc.Name == "fallDamage" then
                    desc.Disabled = true
                end
            end
        end
    else
        if lplr and lplr.Character then
            for _, desc in ipairs(lplr.Character:GetDescendants()) do
                if desc:IsA("LocalScript") and desc.Name == "fallDamage" then
                    desc.Disabled = false
                end
            end
        end
    end
end

local function updateNoClip()
    local lplr = game.Players.LocalPlayer
    if NoClipToggle.Value then
        local character = lplr.Character or lplr.CharacterAdded:Wait()
        character.Humanoid:ChangeState(11) -- Change state to allow noclip
        character:MoveTo(character.Position) -- Keeps the player from being stuck
        character.HumanoidRootPart.CFrame = character.HumanoidRootPart.CFrame + Vector3.new(0, 0.1, 0)
    else
        local character = lplr.Character or lplr.CharacterAdded:Wait()
        character.Humanoid:ChangeState(0) -- Change state to return to normal
    end
end

-- Listen for changes
InfiniteStaminaToggle:OnChanged(updateStamina)
NoFallDamageToggle:OnChanged(updateFallDamage)
NoClipToggle:OnChanged(updateNoClip)

-- Print random messages every 10 seconds
local messages = {
    "Join Our Discord",
    "Showcase on YT: KynX Scripts",
    "Codecraft is trash",
    "https://discord.com/invite/KgChhHrn25"
}

while true do
    wait(10) -- Changed to 10 seconds
    print(messages[math.random(#messages)]) -- Print a random message from the list
end
